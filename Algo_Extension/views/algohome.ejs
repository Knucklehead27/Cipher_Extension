<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css"
      integrity="sha256-2XFplPlrFClt0bIdPgpz8H7ojnk10H69xRqd9+uTShA="
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
      integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
      defer
    ></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css"
    />
    <!-- <link rel="stylesheet" href="/assets/styles/bootstrapselectmin.css" /> -->
    <script
      src="https://code.iconify.design/2/2.0.3/iconify.min.js"
      defer
    ></script>
    <style>
      body {
        margin-top: 0px;
        background: #f7e3e3;
      }

      input:focus {
        outline: none;
      }

      a {
        text-decoration: none;
      }
      /* Card CSS */

      .team-style1 {
        position: relative;
      }

      .team-style1 .team-img {
        font-family: Arial, Helvetica, sans-serif;
        font-weight: lighter;
        font-size: x-large;
        position: relative;
        padding-top: 30px;
        height: 300px;
        color: white;
        background: rgb(40, 164, 247);
        border-radius: 10px;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.09);
        text-align: center;
      }

      .team-style1 .team-img img {
        display: inline-block;
      }

      .team-style1 .team-social-icon {
        position: absolute;
        top: 60px;
        overflow: hidden;
        width: auto;
        display: block;
        transition: all 0.3s ease-in-out;
        z-index: 9;
      }

      .team-style1 .team-social-icon ul {
        list-style: none;
        padding: 0;
        transition: all 0.3s ease-in-out;
        margin: 10px;
      }

      .team-style1 .team-social-icon ul li {
        margin-bottom: 8px;
      }

      .team-style1 .team-social-icon ul li:last-child {
        margin-bottom: 0;
      }

      .team-style1 .team-social-icon ul li a {
        background-color: #fff;
        color: #004975;
        font-size: 15px;
        display: inline-block;
        height: 36px;
        border-radius: 0.25rem;
        width: 36px;
        border: 1px solid rgba(0, 73, 118, 0.41);
        line-height: 36px;
        text-decoration: none;
        text-align: center;
        transition: all 0.3s ease 0s;
      }

      .team-style1 .team-social-icon ul li a:hover {
        background: #00baee;
        color: #fff;
        border: 1px solid #00baee;
      }

      .team-style1 .team-info {
        position: absolute;
        width: 100%;
        height: 200px;
        bottom: 0;
        padding: 30px;
        color: white;
        background: #383838;
        text-align: center;
        /* border: 1px solid black; */
        border-top: 0px;
        border-bottom-right-radius: 10px;
        border-bottom-left-radius: 10px;
      }

      .team-style1 .team-info h6 {
        display: block;
        color: #fff;
        text-transform: capitalize;
      }

      .team-style1 .team-info small {
        display: block;
        color: #fff;
      }

      @media screen and (max-width: 991px) {
        .team-style1 .team-info {
          padding: 15px;
        }
      }

      @media screen and (max-width: 575px) {
        .team-style1 .team-social-icon ul li a {
          width: 30px;
          height: 30px;
          line-height: 30px;
          font-size: 13px;
        }
      }

      .DivLeft {
        float: left;
      }

      .DivRight {
        float: right;
      }

      .vote {
        height: 15px;
      }

      .right1 {
        right: 10px;
        top: 85px;
        position: absolute;
        z-index: 10;
        height: 40px;
        width: 35px;
      }

      .right2 {
        right: 0px;
        top: 293px;

        border-radius: 0px 0px 10px 10px;
        background-color: rgb(40, 164, 247);
        text-align: right;
        position: absolute;
        z-index: 10;
        height: 25px;
        width: 100%;
      }

      .scroll1 {
        height: 150px;
        overflow-y: scroll;
      }

      .scroll1::-webkit-scrollbar {
        display: none;
      }

      .extra {
        margin: 30px 0;
      }

      /* serach bar CSS  */

      .input-form {
        margin: 0px 40px 0px 40px;
      }

      .autocomplete {
        position: relative;
        display: inline-block;
      }

      input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
        /* font-size: 13px; */
      }

      .input-form {
        margin: 20px;
      }

      .submitBtn {
        margin-left: -4px;
        width: 90px;
        /* height: 41px; */
      }

      input[type="text"] {
        /* margin-right: 40px; */
        border-radius: 0px 0px 0px 0px;
        background-color: #878888;
        width: 100%;
      }

      input[type="submit"] {
        background-color: DodgerBlue;
        color: rgb(255, 255, 255);
        cursor: pointer;
        border-radius: 0px 20px 20px 0px;
      }

      ::placeholder {
        /* Chrome, Firefox, Opera, Safari 10.1+ */
        color: rgb(255, 255, 255);
        opacity: 1;
        /* Firefox */
      }

      .autocomplete-items {
        position: absolute;
        border-bottom: none;
        border-top: none;
        height: 180px;
        overflow-y: scroll;
        z-index: 99;
        /* /position the autocomplete items to be the same width as the container:/ */
        top: 100%;
        left: 0;
        right: 0;
      }

      .autocomplete-items::-webkit-scrollbar {
        display: none;
      }

      .autocomplete-items div {
        padding: 10px;
        cursor: pointer;
        color: rgb(0, 0, 0);
        background-color: #cfcece;
        border-bottom: 1px solid #a1a1a1;
      }

      /* /when hovering an item:/ */
      .autocomplete-items div:hover {
        background-color: #e9e9e9;
      }

      /* /when navigating through the items using the arrow keys:/ */
      .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #000000;
      }

      /* new-homepage */
      body {
        background-color: #eee;
      }

      .card {
        border: none;
        border-radius: 10px;
      }

      .c-details span {
        font-weight: 300;
        font-size: 13px;
      }

      .icon {
        width: 50px;
        height: 50px;
        background-color: #eee;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 39px;
      }

      .badge span {
        background-color: #fffbec;
        width: 60px;
        height: 25px;
        padding-bottom: 3px;
        border-radius: 5px;
        display: flex;
        color: #fed85d;
        justify-content: center;
        align-items: center;
      }

      .progress {
        height: 10px;
        border-radius: 10px;
      }

      .progress div {
        background-color: red;
      }

      .text1 {
        font-size: 14px;
        font-weight: 600;
      }

      .text2 {
        color: #a5aec0;
      }
    </style>
  </head>

  <body>
    <section>
      <div class="container">
        <div class="text-center mb-12">
          <form
            autocomplete="off"
            onsubmit="filterAlgo(event)"
            class="input-form"
          >
            <div class="autocomplete" style="width: 50%">
              <input
                id="myInput"
                type="text"
                name="myCountry"
                style="color: #f1f1f1"
                placeholder="search"
              />
            </div>
            <input type="Submit" class="submitBtn" />
          </form>
        </div>

        <div class="container mt-5 mb-3">
          <div class="row" id="algoContainer">
            <% algo.forEach(element =>{ %> 
                
            <% let str = element.description; %> 
            <% if (str.length > 50) { %>
                <% str = str.substr(1, 50); str += "..."; %>
             <% } %>
             <% var date = new Date(element.createdOn);%>
             <% var month = date.getMonth() + 1; var day = date.getDate(); %>
             <% var year = date.getFullYear(); %>
             <% var writtenDate = day + "/" + month + "/" + year; %>

            <div class="col-md-4" style="height: 100%">
              <div class="card p-3 mb-2">
                <div class="d-flex justify-content-between">
                  <div class="d-flex flex-row align-items-center">
                    <img
                      src="https://img.icons8.com/external-konkapp-outline-color-konkapp/64/000000/external-programmer-profession-avatar-konkapp-outline-color-konkapp.png"
                    />
                    <div class="ms-2 c-details">
                      <h6 class="mb-0"><%= element.contributedBy.name %></h6>

                      <span><%= writtenDate %></span>
                    </div>
                  </div>
                </div>
                <div class="mt-4">
                  <h3 class="heading">
                    <a href="https://algo-extension.herokuapp.com/algorithm/<%- element.id %>"
                      ><%= element.name %></a
                    >
                  </h3>
                  <p><%= str %></p>
                  <div class="mt-3" style="display: flex">
                    <!-- upvote -->
                    <span
                      class="iconify"
                      id="test1"
                      data-icon="bx:bxs-upvote"
                      style="margin-right: 5px; color: greenyellow"
                      data-width="30"
                    >
                    </span>
                    <p style="margin-right: 5px"><%= element.upCount.length %></p>

                    <!-- downvote -->
                    <span
                      class="iconify"
                      id="test2"
                      data-icon="bx:bxs-upvote"
                      style="margin-right: 5px; color: red"
                      data-width="30"
                      data-rotate="180deg"
                    ></span>
                    <p style="margin-right: 5px">
                      <%= element.downCount.length %>
                    </p>
                  </div>
                </div>
              </div>
            </div>

            <% }) %>
          </div>
        </div>
      </div>
    </section>

    <script>
      function autocomplete(inp, arr) {
        /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
        var currentFocus;
        // /execute a function when someone writes in the text field:/;
        inp.addEventListener("input", function (e) {
          var a,
            b,
            i,
            val = this.value;
          //   /close any already open lists of autocompleted values/;
          closeAllLists();
          if (!val) {
            return false;
          }
          currentFocus = -1;
          //   /create a DIV element that will contain the items (values):/;
          a = document.createElement("DIV");
          a.setAttribute("id", this.id + "autocomplete-list");
          a.setAttribute("class", "autocomplete-items");
          //   /append the DIV element as a child of the autocomplete container:/;
          this.parentNode.appendChild(a);
          //   /for each item in the array.../;
          for (i = 0; i < arr.length; i++) {
            // /check if the item starts with the same letters as the text field value:/;
            if (
              arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()
            ) {
              //   /create a DIV element for each matching element:/;
              b = document.createElement("DIV");
              //   /make the matching letters bold:/;
              b.innerHTML =
                "<strong>" + arr[i].substr(0, val.length) + "</strong>";
              b.innerHTML += arr[i].substr(val.length);
              //   /insert a input field that will hold the current array item's value:/;
              b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
              //   /execute a function when someone clicks on the item value (DIV element):/;
              b.addEventListener("click", function (e) {
                // /insert the value for the autocomplete text field:/;
                inp.value = this.getElementsByTagName("input")[0].value;
                /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
                closeAllLists();
              });
              a.appendChild(b);
            }
          }
        });
        // /execute a function presses a key on the keyboard:/;
        inp.addEventListener("keydown", function (e) {
          var x = document.getElementById(this.id + "autocomplete-list");
          if (x) x = x.getElementsByTagName("div");
          if (e.keyCode == 40) {
            /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
            currentFocus++;
            // /and and make the current item more visible:/;
            addActive(x);
          } else if (e.keyCode == 38) {
            //up
            /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
            currentFocus--;
            // /and and make the current item more visible:/;
            addActive(x);
          } else if (e.keyCode == 13) {
            // /If the ENTER key is pressed, prevent the form from being submitted,/;
            e.preventDefault();
            if (currentFocus > -1) {
              //   /and simulate a click on the "active" item:/;
              if (x) x[currentFocus].click();
            }
          }
        });
        function addActive(x) {
          //   /a function to classify an item as "active":/;
          if (!x) return false;
          //   /start by removing the "active" class on all items:/;
          removeActive(x);
          if (currentFocus >= x.length) currentFocus = 0;
          if (currentFocus < 0) currentFocus = x.length - 1;
          //   /add class "autocomplete-active":/;
          x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
          //   /a function to remove the "active" class from all autocomplete items:/;
          for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
          }
        }
        function closeAllLists(elmnt) {
          var x = document.getElementsByClassName("autocomplete-items");
          for (var i = 0; i < x.length; i++) {
            if (elmnt != x[i] && elmnt != inp) {
              x[i].parentNode.removeChild(x[i]);
            }
          }
        }
        // /execute a function when someone clicks in the document:/;
        document.addEventListener("click", function (e) {
          closeAllLists(e.target);
        });
      }

    //   const renderAlgo = (algoName = "") => {
    //     console.log("called function");
    //     algoContainer.innerHTML = ``;
    //     let algoArray = `<%- JSON.stringify( algo) %>`;
    //     // algoArray = algoArray.JSON();
    //     // console.log(algoArray)
    //     let filteredAlgoArray;
    //     console.log(typeof algoArray);
    //     // algoArray = JSON.stringify(algoArray);
    //     var newArr = JSON.parse(algoArray);
    //     console.log(newArr[0]);
    //     console.log(typeof newArr);
    //     // filteredAlgoArray = algoArray.filter(function(items) {
    //     //     var name = items.name;
    //     //     console.log(name);
    //     //     if(name.toLowerCase().includes(algoName)==true){
    //     //         return items;
    //     //     }
    //     // });
    //     algoArray.forEach((element) => {
    //       console.log(element);
    //       if (element.name.toLowerCase().includes(algoName)) {
    //         filteredAlgoArray.push(element);
    //       }
    //     });
    //     for (let i = 0; i < filteredAlgoArray.length; i++) {
    //       let str = element.description;
    //       if (str.length > 50) {
    //         str = str.substr(1, 50);
    //         str += "...";
    //       }

    //       var date = new Date(element.createdOn);
    //       var month = date.getMonth() + 1;
    //       var day = date.getDate();
    //       var year = date.getFullYear();
    //       var writtenDate = day + "/" + month + "/" + year;
    //       algoContainer.innerHTML =
    //         algoContainer.innerHTML +
    //         `<div class="col-md-4" style="height: 100%">
    //                 <div class="card p-3 mb-2">
    //                   <div class="d-flex justify-content-between">
    //                     <div class="d-flex flex-row align-items-center">
    //                       <img
    //                         src="https://img.icons8.com/external-konkapp-outline-color-konkapp/64/000000/external-programmer-profession-avatar-konkapp-outline-color-konkapp.png"
    //                       />
    //                       <div class="ms-2 c-details">
    //                         <h6 class="mb-0">${filteredAlgoArray[i].contributedBy.name}</h6>
                            
    //                         <span>${writtenDate}</span>
    //                       </div>
    //                     </div>
    //                   </div>
    //                   <div class="mt-4">
    //                     <h3 class="heading"><a href="https://algo-extension.herokuapp.com/algorithm/${filteredAlgoArray[i].id}">${filteredAlgoArray[i].name}</a></h3>
    //                     <p>
    //                       ${str}
    //                     </p>
    //                     <div class="mt-3" style="display: flex">
    //                       <!-- upvote -->
    //                       <span
    //                         class="iconify"
    //                         id="test1"
    //                         data-icon="bx:bxs-upvote"
    //                         style="margin-right: 5px; color: greenyellow"
    //                         data-width="30"
    //                       >
    //                       </span>
    //                       <p style="margin-right: 5px"> ${filteredAlgoArray[i].upCount.length}</p>
      
    //                       <!-- downvote -->
    //                       <span
    //                         class="iconify"
    //                         id="test2"
    //                         data-icon="bx:bxs-upvote"
    //                         style="margin-right: 5px; color: red"
    //                         data-width="30"
    //                         data-rotate="180deg"
    //                       ></span>
    //                       <p style="margin-right: 5px">${filteredAlgoArray[i].downCount.length}</p>
    //                     </div>
    //                   </div>
    //                 </div>
    //               </div>`;
    //     }
    //   };

      const filterAlgo = async (e) => {
        e.preventDefault();
        let data = document.getElementById("myInput").value;
        console.log(data);
        window.location.href = `https://algo-extension.herokuapp.com/?filter=${data}`;
        // renderAlgo(data);
      };

      //   /An array containing all the country names in the world:/;
      //   var option = dropArr;
      const option = JSON.parse(`<%- JSON.stringify(dropArr) %>`);
      //   console.log(algo);
      //   console.log(option);

      //   /initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:/;
      autocomplete(document.getElementById("myInput"), option);
    </script>
  </body>
</html>
